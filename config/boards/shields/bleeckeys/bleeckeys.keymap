#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <input/processors.dtsi>    

#define QUICK_TAP_MS 125
#define TAPPING_TERM_MS 150
#define SLOW_TAPPING_TERM_MS 350
#define IDLE_TIMEOUT_MS 5000
#define REQ_IDLE_MS 350

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 31 32 33
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 36 37 38
#define KEYS_T 34 35 40 41 42 43 44 45 46 47 48



&mmv_input_listener {
    turbo {
        layers = <7>;
        input-processors = <&zip_xy_scaler 4 1>;
    }; 
};

&msc_input_listener {
    turbo_scroll {
        layers = <7>;
        input-processors = <&zip_scroll_scaler  3 1>;
    }; 
};

/ {

    macros {
        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_2to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
    base_layer_macro: base_layer_macro {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&kp F23 &to 0>;
        };
    nav_layer_macro: nav_layer_macro {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&kp F24 &to 3>;
        };
    };

    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance"; 
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&mo 2>;
        };
        hmtl: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            flavor = "balanced";
            require-prior-idle-ms = <REQ_IDLE_MS>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };
        hmtr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            flavor = "balanced";
            require-prior-idle-ms = <REQ_IDLE_MS>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };
        hmtLayerL: homerow_layer_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LAYER_LEFT_HAND";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            flavor = "balanced";
            require-prior-idle-ms = <REQ_IDLE_MS>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };
        hmtLayerR: homerow_layer_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LAYER_RIGHT_HAND";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            flavor = "balanced";
            require-prior-idle-ms = <REQ_IDLE_MS>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_capslock {
            timeout-ms = <200>;
            key-positions = <42 47>;
            bindings = <&caps_word>;
        };
        
        combo_capsmod_right {
            timeout-ms = <200>;
            key-positions = <35 48>;
            bindings = <&mo 1>;
        };
        combo_return_left {
            timeout-ms = <200>;
            key-positions = <41 42>;
            bindings = <&kp RET>;
        };
        combo_bluetooth{
            timeout-ms=<200>;
            key-positions = <40 42 44>;
            bindings = <&tog 6>;
        };
//        combo_homerow{
//            timeout-ms=<200>;
//            key-positions = <34 35>;
//            bindings = <&mo 2>;
//        };
        combo_symbol_shift_right{
            timeout-ms=<200>;
            key-positions = <47 48>;
            bindings = <&lm 3 LSHIFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

            default_layer {
                display-name = "BASE";
                bindings = <
&kp Q	&kp W	&kp E	&kp R	&kp T		&kp Y	&kp U	&kp I	&kp O	&kp P
&hmtl LSHIFT A	&hmtl LALT S	&hmtl LCTRL D	&hmtl LGUI F	&kp G		&kp H	&hmtr LGUI J	&hmtr LCTRL K	&hmtr LALT  L	&hmtr LSHIFT SINGLE_QUOTE
&kp Z	&kp X	&kp C	&hmtLayerL 4 V	&hmtLayerL 5 B		&hmtLayerR 5 N	&hmtLayerR 4 M	&kp COMMA	&kp DOT	&kp SEMI
&kp C_MUTE	&kp LGUI	&kp LCTRL	&kp RET	&mo 1		&kp SPACE	&kp RET	&kp LSHIFT	&kp LGUI	&kp C_MUTE
&caps_word	&kp LSHIFT	&mo 5	&base_layer_macro	&nav_layer_macro		&nav_layer_macro	&base_layer_macro	&mo 2	&kp LSHIFT	&mo 1
>;

                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            };

            capsMod_layer {
                display-name = "CAPSMOD";
                bindings = <
&kp ESC	&kp LC(W)	&kp RET	&caps_word	&kp SPACE		&kp PAGE_UP	&kp HOME	&kp UP_ARROW	&kp END	&trans
&kp LSHIFT	&kp LALT	&kp LCTRL	&kp TAB	&kp BSPC		&kp PAGE_DOWN	&kp LEFT_ARROW	&kp DOWN_ARROW	&kp RIGHT_ARROW	&kp RSHIFT
&kp LC(Z)	&mkp MB1	&mkp MB3	&mkp MB2	&kp DEL		&kp BSPC	&kp DEL	&kp LESS_THAN	&kp GREATER_THAN	&kp TAB
&kp C_MUTE	&kp LC(X)	&kp LC(C)	&kp LC(V)	&mo 1		&kp SPACE	&trans	&trans	&trans	&kp C_MUTE
&mo 2	&mo 4	&mo 5	&base_layer_macro	&nav_layer_macro		&nav_layer_macro	&base_layer_macro	&mo 5	&mo 4	&mo 2
>;
            sensor-bindings =  <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            };

            homerow_layer{
                display-name = "HOMEROW";
                bindings =<
&trans	&trans	&trans	&trans	&trans		&trans	&trans	&trans	&trans	&trans
&hmtl LSHIFT A	&hmtl LALT S	&hmtl LCTRL D	&hmtl LGUI F	&trans		&trans	&hmtr LGUI J	&hmtr LCTRL K	&hmtr LALT  L	&hmtr LSHIFT SEMI
&trans	&trans	&trans	&hmtLayerL 4 V	&hmtLayerL 5 B		&hmtLayerR 5 N	&hmtLayerR 4 M	&trans	&trans	&trans
&kp C_MUTE	&trans	&trans	&trans	&trans		&trans	&trans	&trans	&trans	&kp C_MUTE
&trans	&trans	&trans	&trans	&trans		&trans	&trans	&trans	&trans	&trans
>;
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            };

            navigation_layer {
                display-name = "NAV";

                bindings = <
&kp LALT	&kp Q	&kp UP_ARROW	&kp E	&kp R		&msc SCRL_UP	&trans	&mmv MOVE_UP	&trans	&trans
&kp LSHIFT	&kp LEFT_ARROW	&kp DOWN_ARROW	&kp RIGHT_ARROW	&kp F		&msc SCRL_DOWN	&mmv MOVE_LEFT	&mmv MOVE_DOWN	&mmv MOVE_RIGHT	&trans
&kp LCTRL	&mkp MB1	&mkp MB3	&mkp MB2	&trans		&kp BSPC	&mkp MB1	&mkp MB3	&mkp MB2	&trans
&kp C_MUTE	&kp LC(X)	&kp LC(C)	&kp LC(V)	&kp SPACE		&kp SPACE	&trans	&trans	&trans	&kp C_MUTE
&mo 1	&mkp MB2	&mo 8	&base_layer_macro	&to 9		&to 9	&base_layer_macro	&mo 8	&mkp MB2	&mo 2
>;

                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            };


            symbol_layer {
                display-name = "SYM";

                bindings = <
&kp GRAVE	&kp LEFT_BRACKET	&kp RIGHT_BRACKET	&kp LESS_THAN	&kp GREATER_THAN		&kp SLASH	&kp NUMBER_7	&kp NUMBER_8	&kp NUMBER_9	&kp MINUS
&kp LSHIFT	&hmtl LALT LEFT_PARENTHESIS	&hmtl LCTRL RIGHT_PARENTHESIS	&kp SEMICOLON	&kp EQUAL		&kp ASTERISK	&kp NUMBER_4	&hmtl LCTRL NUMBER_5	&hmtl LALT NUMBER_6	&hmtr LSHIFT EQUAL
&kp MINUS	&kp LEFT_BRACE	&kp RIGHT_BRACE	&kp SINGLE_QUOTE	&trans		&kp BSPC	&kp NUMBER_1	&kp NUMBER_2	&kp NUMBER_3	&kp BACKSLASH
&kp C_MUTE	&trans	&trans	&trans	&mo 1		&kp SPACE	&kp NUMBER_0	&kp COMMA	&kp DOT	&kp C_MUTE
&mo 2	&mo 4	&mo 5	&base_layer_macro	&nav_layer_macro		&nav_layer_macro	&base_layer_macro	&mo 5	&mo 4	&mo 2
>;
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            };

            function_layer {
                display-name = "FN";

                bindings = <
&kp LALT	&kp F19	&kp F20	&kp F21	&kp F24		&kp LC(LA(DEL))	&kp F7	&kp F8	&kp F9	&kp LALT
&kp LSHIFT	&hmtl LALT F16	&hmtl LCTRL F17	&kp F18	&kp F23		&kp LA(F4)	&kp F4	&kp F5	&kp F6	&kp LSHIFT
&kp LCTRL	&kp F13	&kp F14	&kp F15	&kp F22		&kp LC(LS(ESC))	&kp F1	&kp F2	&kp F3	&kp LCTRL
&kp C_MUTE	&trans	&trans	&kp LC(LA(GRAVE))	&mo 1		&kp SPACE	&kp F10	&kp F11	&kp F12	&kp C_MUTE
&mo 2	&mo 4	&mo 5	&base_layer_macro	&nav_layer_macro		&nav_layer_macro	&base_layer_macro	&mo 5	&mo 4	&mo 2
>;
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            };

            bluetooth_layer{
                display-name = "BT";

                bindings = <
&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4		&trans	&trans	&trans	&trans	&trans
&bt BT_DISC 0	&bt BT_DISC 1	&bt BT_DISC 2	&bt BT_DISC 3	&bt BT_DISC 4		&trans	&trans	&trans	&trans	&trans
&trans	&trans	&trans	&trans	&trans		&trans	&trans	&trans	&trans	&trans
&kp C_MUTE	&bt BT_CLR	&trans	&trans	&trans		&trans	&trans	&trans	&trans	&kp C_MUTE
&trans	&trans	&trans	&bootloader	&trans		&trans	&bootloader	&trans	&trans	&trans
>;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
};
            mouse_turbo_layer {
                display-name = "TURBO";

                bindings = <
&kp LALT	&kp Q	&kp UP_ARROW	&kp E	&kp R		&msc SCRL_UP	&trans	&mmv MOVE_UP	&trans	&trans
&kp LSHIFT	&kp LEFT_ARROW	&kp DOWN_ARROW	&kp RIGHT_ARROW	&kp F		&msc SCRL_DOWN	&mmv MOVE_LEFT	&mmv MOVE_DOWN	&mmv MOVE_RIGHT	&trans
&kp LCTRL	&mkp MB1	&mkp MB3	&mkp MB2	&trans		&kp BSPC	&mkp MB1	&mkp MB3	&mkp MB2	&trans
&kp C_MUTE	&kp LC(X)	&kp LC(C)	&kp LC(V)	&kp SPACE		&kp SPACE	&trans	&trans	&trans	&kp C_MUTE
&mo 1	&mkp MB2	&mo 8	&base_layer_macro	&to 9		&to 9	&base_layer_macro	&mo 8	&mkp MB2	&mo 2
>;
sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;                
            };

            navigation_symbol_layer {
                display-name = "NAV_SYM";

                bindings = <
&kp ESC	&kp NUMBER_1	&kp NUMBER_2	&kp NUMBER_3	&kp NUMBER_4		&trans	&trans	&trans	&trans	&trans
&kp LSHIFT	&kp NUMBER_5	&kp NUMBER_6	&kp NUMBER_7	&kp NUMBER_8		&trans	&trans	&trans	&trans	&trans
&kp C	&kp I	&kp M	&kp N	&kp B		&trans	&trans	&trans	&trans	&trans
&kp C_MUTE	&trans	&trans	&kp RET	&kp SPACE		&trans	&trans	&trans	&trans	&kp C_MUTE
&mo 1	&mkp MB2	&mo 8	&base_layer_macro	&nav_layer_macro		&trans	&trans	&trans	&trans	&trans
>;
sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;                
            };

            navigation_alpha_layer {
                display-name = "NAV_ALPHA";

                bindings = <
&kp LALT	&kp Q	&kp W	&kp E	&kp R		&msc SCRL_UP	&trans	&mmv MOVE_UP	&trans	&trans
&kp LSHIFT	&kp A	&kp S	&kp D	&kp F		&msc SCRL_DOWN	&mmv MOVE_LEFT	&mmv MOVE_DOWN	&mmv MOVE_RIGHT	&trans
&kp LCTRL	&mkp MB1	&mkp MB3	&mkp MB2	&trans		&kp BSPC	&mkp MB1	&mkp MB3	&mkp MB2	&trans
&kp C_MUTE	&kp LC(X)	&kp LC(C)	&kp LC(V)	&kp SPACE		&kp SPACE	&trans	&trans	&trans	&kp C_MUTE
&mo 1	&mkp MB2	&mo 8	&base_layer_macro	&nav_layer_macro		&nav_layer_macro	&base_layer_macro	&mo 8	&mkp MB2	&mo 2
>;
sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;                
            };
    };
};